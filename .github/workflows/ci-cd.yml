name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo
        ports:
          - 27017:27017
    env:
      MONGO_URI: mongodb://localhost:27017
      JWT_SECRET: testsecret
      NODE_ENV: test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install backend dependencies
        working-directory: ./kanban-backend
        run: npm install

      - name: Run backend tests
        working-directory: ./kanban-backend
        run: npm test

      - name: Install frontend dependencies
        working-directory: ./kanban-frontend
        run: npm install

  docker-build-push:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Backend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/kanban-backend:latest ./kanban-backend
          docker push ${{ secrets.DOCKER_USERNAME }}/kanban-backend:latest

      - name: Build and Push Frontend Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/kanban-frontend:latest ./kanban-frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/kanban-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build-push

    steps:
      - name: Restore kubeconfig from secret
        run: |
          echo "${{ secrets.KUBECONFIG_DATA }}" | base64 -d > kubeconfig
        shell: bash

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Sync ArgoCD App
        run: |
          export KUBECONFIG=$PWD/kubeconfig
          kubectl -n argocd rollout restart deployment kanban-app
