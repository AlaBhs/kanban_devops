name: CI PIPELINE (KinD)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    env:
      MONGO_URI: mongodb://localhost:27017
      JWT_SECRET: testsecret
      NODE_ENV: test
      
    services:
      mongo:
        image: mongo
        ports:
          - 27017:27017

    steps:
      # 1. Checkout code
      - name: 🧾 Checkout code
        uses: actions/checkout@v3

      # 2. Set up Node.js
      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 3. Install & test backend
      - name: 📦 Install backend dependencies
        working-directory: ./kanban-backend
        run: npm install

      - name: ✅ Run backend tests
        working-directory: ./kanban-backend
        run: npm test

      # 4. Install frontend dependencies
      - name: 📦 Install frontend dependencies
        working-directory: ./kanban-frontend
        run: npm install

      # 5. Build Docker images
      - name: 🐳 Build backend Docker image
        run: docker build -t kanban-backend:ci ./kanban-backend

      - name: 🐳 Build frontend Docker image
        run: docker build -t kanban-frontend:ci ./kanban-frontend

      # 6. Create KinD cluster
      - name: 🛠️ Create KinD cluster
        run: |
          kind create cluster --wait 60s
          kubectl cluster-info

      # 7. Load images into KinD
      - name: 🐳 Load backend image into KinD
        run: kind load docker-image kanban-backend:ci

      - name: 🐳 Load frontend image into KinD
        run: kind load docker-image kanban-frontend:ci

      # 8. Deploy to Kubernetes
      - name: 📦 Apply MongoDB manifests
        run: kubectl apply -f k8s/database/

      - name: 📦 Apply backend manifests
        run: kubectl apply -f k8s/backend/

      - name: 📦 Apply frontend manifests
        run: kubectl apply -f k8s/frontend/

      # 9. Wait for deployments
      - name: ⏳ Wait for MongoDB to be ready
        run: kubectl rollout status deployment/mongo --timeout=120s

      - name: ⏳ Wait for backend to be ready
        run: kubectl rollout status deployment/backend --timeout=120s

      - name: ⏳ Wait for frontend to be ready
        run: kubectl rollout status deployment/frontend --timeout=120s
      - name: 🔍 List services
        run: kubectl get svc
      # 10. Smoke-test the backend API
      - name: 🔍 Smoke test backend
        run: |
          kubectl port-forward svc/kanban-backend-service 5000:5000 &
          sleep 5
          curl --fail http://localhost:5000/ || (echo '❌ Backend not responding' && exit 1)

      # 11. Smoke-test the frontend UI
      - name: 🔍 Smoke test frontend
        run: |
          kubectl port-forward svc/kanban-frontend-service 3000:80 &
          sleep 5
          curl --fail http://localhost:3000/ || (echo '❌ Frontend not responding' && exit 1)
